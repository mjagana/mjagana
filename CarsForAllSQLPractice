/* 1. Create a list of employees and their immediate managers */

SELECT e1.firstName,
  e1.lastName,
  e1.title,
  e2.firstName AS managerfirstName,
  e2.lastName AS managerlastName
FROM employee e1
JOIN employee e2
ON e2.employeeId = e1.managerId;

/* 2. Find salespeople who have zero sales */

SELECT firstName,
  lastName
FROM employee e
LEFT JOIN sales s
ON s.employeeId = e.employeeId
WHERE title = 'Sales Person'
AND salesId IS NULL;

/* 3. List all customers and their sales, even if some data is gone */

SELECT cus.firstName, cus.lastName, cus.email, sls.salesAmount, sls.soldDate
FROM customer cus
INNER JOIN sales sls
    ON cus.customerId = sls.customerId
UNION
-- UNION WITH CUSTOMERS WHO HAVE NO SALES
SELECT cus.firstName, cus.lastName, cus.email, sls.salesAmount, sls.soldDate
FROM customer cus
LEFT JOIN sales sls
    ON cus.customerId = sls.customerId
WHERE sls.salesId IS NULL
UNION
-- UNION WITH SALES MISSING CUSTOMER DATA
SELECT cus.firstName, cus.lastName, cus.email, sls.salesAmount, sls.soldDate
FROM sales sls
LEFT JOIN customer cus
    ON cus.customerId = sls.customerId
WHERE cus.customerId IS NULL;

/* 4. How many cars have been sold per employee? */

SELECT e.employeeId, e.firstName, e.lastName, COUNT(*) AS NumOfCarsSold
FROM employee e
JOIN sales s
ON s.employeeId = e.employeeId
GROUP BY e.employeeId, e.firstName, e.lastName
ORDER BY NumOfCarsSold DESC;

/* 5. Find the least and most expensive car sold by each employee this year. */

SELECT e.employeeId, 
  e.firstName, 
  e.lastName, 
  MIN(salesAmount) AS leastexpensive,
  MAX(salesAmount) AS mostexpensive
FROM employee e
JOIN sales s
ON s.employeeId = e.employeeId
WHERE s.soldDate >= date('now', 'start of year')
GROUP BY e.employeeId, e.firstName, e.lastName;

/* 6. Get a list of employees who have made more than five sales this year */

SELECT e.employeeId, 
  COUNT(*) AS NumOfCarsSold, 
  MIN(salesAmount) AS leastexpensive,
  MAX(salesAmount) AS mostexpensive
FROM employee e
JOIN sales s
ON s.employeeId = e.employeeId
WHERE s.soldDate >= date('now', 'start of year')
GROUP BY e.employeeId
HAVING COUNT(*) > 5;

/* Summarize sales per year using a CTE */

WITH CTE AS (
  SELECT strftime('%Y', soldDate) AS soldYear,
    salesAmount
  FROM sales
)

SELECT soldYear,
  FORMAT("$%.2f",SUM(salesAmount)) AS AnnualSales
FROM CTE
GROUP BY soldYear
ORDER BY soldYear;

/* 8. Create a report that shows the amount of sales per employee for each month in 2021 */

-- 1. start with a query to get the needed data
SELECT emp.firstName, emp.lastName, sls.soldDate, sls.salesAmount
FROM sales sls
INNER JOIN employee emp
  ON sls.employeeId = emp.employeeId
WHERE sls.soldDate >= '2021-01-01'
AND sls.soldDate < '2022-01-01'


-- 2. implement case statements for each month
SELECT emp.firstName, emp.lastName,
  CASE WHEN strftime('%m', soldDate) = '01'
      THEN salesAmount END AS JanSales,
  CASE 
      WHEN strftime('%m', soldDate) = '02'
      THEN salesAmount END AS FebSales,
  CASE 
      WHEN strftime('%m', soldDate) = '03'
      THEN salesAmount END AS MarSales,
  CASE 
      WHEN strftime('%m', soldDate) = '04' 
      THEN salesAmount END AS AprSales,
  CASE 
      WHEN strftime('%m', soldDate) = '05' 
      THEN salesAmount END AS MaySales,
  CASE 
      WHEN strftime('%m', soldDate) = '06' 
      THEN salesAmount END AS JunSales,
  CASE 
      WHEN strftime('%m', soldDate) = '07' 
      THEN salesAmount END AS JulSales,
  CASE 
      WHEN strftime('%m', soldDate) = '08' 
      THEN salesAmount END AS AugSales,
  CASE 
      WHEN strftime('%m', soldDate) = '09' 
      THEN salesAmount END AS SepSales,
  CASE 
      WHEN strftime('%m', soldDate) = '10' 
      THEN salesAmount END AS OctSales,
  CASE 
      WHEN strftime('%m', soldDate) = '11' 
      THEN salesAmount END AS NovSales,
  CASE 
      WHEN strftime('%m', soldDate) = '12' 
      THEN salesAmount END AS DecSales
FROM sales sls
INNER JOIN employee emp
  ON sls.employeeId = emp.employeeId
WHERE sls.soldDate >= '2021-01-01'
  AND sls.soldDate < '2022-01-01'
ORDER BY emp.lastName, emp.firstName

-- 3. finally group the data
SELECT emp.firstName, emp.lastName,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '01' 
        THEN salesAmount END) AS JanSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '02' 
        THEN salesAmount END) AS FebSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '03' 
        THEN salesAmount END) AS MarSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '04' 
        THEN salesAmount END) AS AprSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '05' 
        THEN salesAmount END) AS MaySales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '06' 
        THEN salesAmount END) AS JunSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '07' 
        THEN salesAmount END) AS JulSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '08' 
        THEN salesAmount END) AS AugSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '09' 
        THEN salesAmount END) AS SepSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '10' 
        THEN salesAmount END) AS OctSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '11' 
        THEN salesAmount END) AS NovSales,
  SUM(CASE 
        WHEN strftime('%m', soldDate) = '12' 
        THEN salesAmount END) AS DecSales
FROM sales sls
INNER JOIN employee emp
  ON sls.employeeId = emp.employeeId
WHERE sls.soldDate >= '2021-01-01'
  AND sls.soldDate < '2022-01-01'
GROUP BY emp.firstName, emp.lastName
ORDER BY emp.lastName, emp.firstName;

/* 9. Find all sales where the car purchased was electric */

SELECT s.soldDate,
  s.salesAmount,
  i.colour,
  i.year
FROM sales s
JOIN inventory i
ON i.inventoryId = s.inventoryId
WHERE i.modelId IN (
SELECT modelId
FROM model
WHERE EngineType = 'Electric');

/* 10. Get a list of salespeople and rank the car models they've sold the most of */

SELECT e.firstName, e.lastName, 
  m.model, 
  COUNT(m.model) AS NumbersSold,
  RANK() OVER(PARTITION BY s.employeeId ORDER BY COUNT(m.model) DESC) AS rank
FROM employee e
JOIN sales s
ON s.employeeId = e.employeeId
JOIN inventory i
ON i.inventoryId = s.inventoryId
JOIN model m
ON m.modelId = i.modelId
GROUP BY e.firstName, e.lastName, m.model;

/* 11. Generate a sales report showing total sales per month and an annual running total */

WITH CTE AS (SELECT strftime('%Y',soldDate) AS soldYear,
  strftime('%m',soldDate) AS soldMonth,
  SUM(salesAmount) AS salesAmount
FROM sales
GROUP BY soldYear, soldMonth
ORDER BY soldYear, soldMonth)

SELECT soldYear,
  soldMonth,
  salesAmount,
  SUM(salesAmount) OVER (PARTITION BY soldYear ORDER BY soldYear,soldMonth) AS RunningTotal
FROM CTE;

/* 12. Create a report showing the number of cars sold this month and last month */

WITH CTE AS (SELECT strftime('%Y-%m',soldDate) AS MonthSold,
  COUNT(*) AS NumOfCarsSold
FROM sales
GROUP BY MonthSold)

SELECT MonthSold,
  NumOfCarsSold,
  LAG(NumOfCarsSold,1,0) OVER (ORDER BY MonthSold) AS PrevNumOfCarsSold
FROM CTE;
